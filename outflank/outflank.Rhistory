library(devtools)
library(vcfR)
library(qvalue)
install.packages("qvalue")
library(qvalue)
devtools::install_github("whitlock/OutFLANK")
if (!requireNamespace("BiocManager", quietly = TRUE))
    install.packages("BiocManager")
BiocManager::install("qvalue")
library(qvalue)
devtools::install_github("whitlock/OutFLANK")
library(OutFLANK)
vcf<-read.vcfR("SNP.final.recode.maf.missing.vcf",verbose=FALSE)
convertVCFtoCount3 <- function(string){
# This function assumes 0 for reference
# and 1 for alternate allele
a <- as.numeric(unlist(strsplit(string, split = c("[|///]"))))
odd = seq(1, length(a), by=2)
a[odd] + a[odd+1]
}
all.vcf.gen <- vcf@gt[,-1]
system.time(gen_table <- matrix(convertVCFtoCount3(all.vcf.gen), ncol=ncol(all.vcf.gen)))
head(all.vcf.gen)
obj.vcfR<-vcf
geno <- extract.gt(obj.vcfR) # Character matrix containing the genotypes
position <- getPOS(obj.vcfR) # Positions in bp
chromosome <- getCHROM(obj.vcfR) # Chromosome information
G <- matrix(NA, nrow = nrow(geno), ncol = ncol(geno))
G[geno %in% c("0/0", "0|0")] <- 0
G[geno  %in% c("0/1", "1/0", "1|0", "0|1")] <- 1
G[geno %in% c("1/1", "1|1")] <- 2
table(as.vector(G))
G
head(G)
G
vcf
pops<-read.table("pops_all.txt",header=FALSE)
head(pops)
OF_SNPs<-MakeDiploidFSTMat(G,locusNames=seq(1,1070,by=1),popNames=pops$V2)
head(G)
data(sim1a)
sim1a
head(sim1a)
names(sim1a)
names(G)
geno
position
chromosome
G[geno %in
G[geno %in% c("NA")]<-9
G
G[geno %in% c(NA)]<-9
G
table(as.vector(G))
names(G)
names(sim1a)
sim1a$chromosome
pop
sim1a$pop
head(sim1a)
summary(sim1a)
sim1a



pops
pops$V3
my_fst<-MakeDiploidFSTMat(t(G),locusNames=position,popNames=pops$V3)
my_fst
head(my_fst)
pdf(fst_vs_he.pdf)
pdf("fst_vs_he.pdf")
plot(my_fst$He, my_fst$FST)
dev.off()
pdf("fst_vs_fstnocorr.pdf")
plot(my_fst$FST, my_fst$FSTNoCorr)
abline(0,1)
dev.off()
if (!("bigstatsr" %in% installed.packages())){install.packages("bigstatsr")}
library(bigstatsr)
if (!("bigsnpr" %in% installed.packages())){devtools::install_github("privefl/bigsnpr")}
library(bigsnpr)   # package for SNP trimming
G1<-add_code256(big_copy(t(G),type="raw"),code=bigsnpr:::CODE_012)
G1
chromosome
as.integer(chromosome)
as.num(chromosome)
strtoi(chromosome)
strtoi(chromosome,16L)
as.character(chromosome)
write.table("chroms.txt",chromosomes)
write.table("chroms.txt",chromosome)
write.table(chromosome,"chroms.txt")
chroms<-read.table("chroms.txt",header=FALSE)
chroms
head(chroms)
newpc<-snp_autoSVD(G=G_1,infos.chr=chroms$V1,infos.pos=position)
G_!
G_1
G1
newpc<-snp_autoSVD(G=G1,infos.chr=chroms$V1,infos.pos=position)
G1
G
G1
q()
G
library(bigstatsr)
library(bigsnpr)
library(vcfR)
library(OutFLANK)
obj.vcfR<-read.vcfR("SNP_outflank.vcf")
geno <- extract.gt(obj.vcfR) # Character matrix containing the genotypes
position <- getPOS(obj.vcfR) # Positions in bp
chromosome <- getCHROM(obj.vcfR) # Chromosome information
G <- matrix(NA, nrow = nrow(geno), ncol = ncol(geno))
G[geno %in% c("0/0", "0|0")] <- 0
G[geno  %in% c("0/1", "1/0", "1|0", "0|1")] <- 1
G[geno %in% c("1/1", "1|1")] <- 2
table(as.vector(G))
G
chromosome
my_fst
head(my_fst)
G
G_1
G1
out_trim<-OutFLANK(my_fst,NumberOfSamples=159,qthreshold=0.05,Hmin=0.1)
str(out_trim)
head(out_trim$results)
pdf("out_trim.pdf")
OutFLANKResultsPlotter(out_trim, withOutliers = TRUE,
                       NoCorr = TRUE, Hmin = 0.1, binwidth = 0.001, Zoom =
                         FALSE, RightZoomFraction = 0.05, titletext = NULL)
dev.off()
pdf("out_trim_righttail.pdf")
OutFLANKResultsPlotter(out_trim , withOutliers = TRUE,
                       NoCorr = TRUE, Hmin = 0.1, binwidth = 0.001, Zoom =
                         TRUE, RightZoomFraction = 0.15, titletext = NULL)
dev.off()
pdf("hist_pvals.pdf")
hist(out_trim$results$pvaluesRightTail)
dev.off()
P1 <- pOutlierFinderChiSqNoCorr(my_fst, Fstbar = out_trim$FSTNoCorrbar, 
                                   dfInferred = out_trim$dfInferred, qthreshold = 0.05, Hmin=0.1)
head(P1)
tail(P1)
pdf("he_vs_fst_outliers.pdf")
my_out <- P1$OutlierFlag==TRUE
plot(P1$He, P1$FST, pch=19, col=rgb(0,0,0,0.1))
points(P1$He[my_out], P1$FST[my_out], col="blue")
dev.off()
pdf("outliers.pdf")
plot(P1$LocusName[P1$He>0.1], P1$FST[P1$He>0.1],
     xlab="Position", ylab="FST", col=rgb(0,0,0,0.2))
  points(P1$LocusName[my_out], P1$FST[my_out], col="magenta", pch=20)  
dev.off()
my_out
head(my_out)
P1$LocusName[my_out]
positions
position
P1
head(P1)
G_1
G1
G
head(G)
chromosomes
chromosome
obj.vcfR<-read.vcfR("SNP.final.recode.maf.missing.vcf")
geno <- extract.gt(obj.vcfR) # Character matrix containing the genotypes
position <- getPOS(obj.vcfR) # Positions in bp
chromosome <- getCHROM(obj.vcfR) # Chromosome information
G <- matrix(NA, nrow = nrow(geno), ncol = ncol(geno))
G[geno %in% c("0/0", "0|0")] <- 0
G[geno  %in% c("0/1", "1/0", "1|0", "0|1")] <- 1
G[geno %in% c("1/1", "1|1")] <- 2
table(as.vector(G))
G
G[geno %in% c(NA)] <- 9
table(as.vector(G))
head(my_fst)
length(my_fst)
dim(my_fst)
head(my_fst)
rand(1000,c(1:1000))
which_pruned<-sample(1:1070,200,replace=F)
which_pruned
which_pruned<-sample(1:1070,800,replace=F)
out_trim <- OutFLANK(my_fst[which_pruned,], NumberOfSamples=39, qthreshold = 0.05, Hmin = 0.1)
str(out_trim)
head(out_trim$results)
pdf("out_trim.pdf")
OutFLANKResultsPlotter(out_trim, withOutliers = TRUE,
                       NoCorr = TRUE, Hmin = 0.1, binwidth = 0.001, Zoom =
                         FALSE, RightZoomFraction = 0.05, titletext = NULL)
dev.off()
pdf("out_trim_righttail.pdf")
OutFLANKResultsPlotter(out_trim , withOutliers = TRUE,
                       NoCorr = TRUE, Hmin = 0.1, binwidth = 0.001, Zoom =
                         TRUE, RightZoomFraction = 0.15, titletext = NULL)
dev.off()
pdf("hist_pvals.pdf")
hist(out_trim$results$pvaluesRightTail)
dev.off()
P1 <- pOutlierFinderChiSqNoCorr(my_fst, Fstbar = out_trim$FSTNoCorrbar, 
                                   dfInferred = out_trim$dfInferred, qthreshold = 0.05, Hmin=0.1)
head(P1)
head(P1)
dim(P1)
my_out <- P1$OutlierFlag==TRUE
my_out
which(P1$OutlierFlag==TRUE)
P1[253,]
P1[546,]
P[546,]
P1[546,]
savehistory(file="outflank.Rhistory")
